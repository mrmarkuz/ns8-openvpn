#!/usr/bin/env python3

#
# Copyright (C) 2025 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent
import os
from agent.ldapproxy import Ldapproxy

# Try to parse the stdin as JSON.
# If parsing fails, output everything to stderr
data = json.load(sys.stdin)

# Get LDAP domain
ldap_domain = data.get("ldap_domain", "")

# Set LDAP domain

agent.set_env("LDAP_DOMAIN",ldap_domain)

# unset LDAP

agent.unset_env("LDAP_HOST")
agent.unset_env("LDAP_BIND_DN")
agent.unset_env("LDAP_BIND_PW")
agent.unset_env("LDAP_USERS_BASE_DN")
agent.unset_env("LDAP_ATTR")
agent.unset_env("LDAP_AUTH")

# Check if an LDAP domain is set:

if ldap_domain and ldap_domain != "None":
    agent.bind_user_domains([ldap_domain])

    # Get LDAP properties
    odom = Ldapproxy().get_domain(ldap_domain)
    base_dn = odom['base_dn']

    # Set basic LDAP props
    agent.set_env("LDAP_AUTH","ldap")
    agent.set_env("LDAP_HOST","10.0.2.2:"+odom['port'])
    agent.set_env("LDAP_BIND_DN",odom['bind_dn'])
    agent.set_env("LDAP_BIND_PW",odom['bind_password'])

    if odom['schema'] == "rfc2307":
        # OpenLDAP specific:
        agent.set_env("LDAP_USERS_BASE_DN","ou=People,"+base_dn)
        agent.set_env("LDAP_ATTR","uid")

    if odom['schema'] == "ad":
        # Samba AD specific:
        agent.set_env("LDAP_BIND_DN","cn=ldapservice,cn=Users,"+base_dn)
        agent.set_env("LDAP_USERS_BASE_DN","cn=Users,"+base_dn)
        agent.set_env("LDAP_ATTR","sAMAccountName")
else:
    agent.set_env("LDAP_AUTH","local")
    agent.bind_user_domains([])

agent.dump_env()